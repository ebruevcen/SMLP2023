---
title: "Practice 1"
subtitle: "Conditional Inferences in SMLP2023"
author: "Ebru Evcen"
date: "2023-09-12"
format:
  html:
    embed-resources: true
    toc: true
    toc-depth: 2
    code-fold: false
    number-sections: true
    fig-width: 8
    fig-height: 6
editor_options:
  chunk_output_type: console
jupyter: julia-1.9
---


```{julia}
using Pkg
Pkg.add("CSV")
using CSV, DataFrames

```
```{julia}
df = CSV.read("evcen_smlp23.csv", DataFrame)
```


```{julia}
describe(df)
```


```{julia}
levels(df.type)
levels(df.response)
levels(df.condition)
```


```{julia}
dat = DataFrame(Arrow.Table("data/Evcen_CondInf.arrow"));
describe(dat)
dat
levels(dat.Type)
levels(dat.Resp)
levels(dat.Cat)
```



```{julia}

m_prm1 = let
contrasts =Dict(:Type => EffectsCoding(; base= "standard"),
                :Resp => EffectsCoding(; base ="F"),
                :Cat => EffectsCoding(; base="control"))
form = @formula(log(rt) ~ 1 + (Type + Resp + Cat)^2 + 
                    zerocorr(1 + Resp | Subj) + zerocorr(1 + Cat + Resp | Item));
    fit(MixedModel, form, dat; contrasts);
  end
```


```{julia}
pb2 = parametricbootstrap(MersenneTwister(42),1000, m_prm1; optsum_overrides =(;ftol_rel=1e-8))

```

```{julia}
confint(pb2) #This is what will be in the plot
```
```{julia}
draw(
  data(pb2.β) * mapping(:β; color=:coefname) * AlgebraOfGraphics.density();
  figure=(; resolution=(800, 450)),
)
```


```{julia}
ridgeplot(pb2, show_intercept = false)
```


```{r}
install.packages("tidyverse")
library(tidyverse)

dat.r = read_csv("data/evcen_smlp23.csv")
glimpse(dat.r)

dat.r.new = dat.r |>
 group_by(type) |>
 summarise(mean=mean(RT))

dat.r

dat.r.new

#output it as a wrangled.csv, then reload it into arrow files?

```


```{julia}
using Arrow
using CSV
using DataFrames

csv_path = "evcen_smlp2023.csv"

# read in the data and convert it to a dataframe
df = CSV.read(csv_path, DataFrame)
df
# do stuff ....

# write out the dataframe as an Arrow table

arrow_path = "evcen_smlp2023.arrow"
Arrow.write(arrow_path, df)

```